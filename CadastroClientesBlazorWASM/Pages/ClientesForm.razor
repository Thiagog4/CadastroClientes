@page "/ClientesForm"
@inject HttpClient http
@inject IDialogService DialogService



<h4>Formulario</h4>
<p>Ao clilcar no botao, voce troca os componentes que estou usando de uma biblioteca para os componentes nativos do BLAZOR</p>
<button class="btn btn-primary mt-5 mb-5" @onclick="switchScreenType">Trocar</button>
@if(switchScreen == true)
{
    <EditForm Model="clientes" OnValidSubmit="handleSendClient">
    <DataAnnotationsValidator />
    <label>CPF</label>
    <input type="number" @bind-value:event="oninput"  class="form-control" @bind-value="clientes.Cpf" />
    <ValidationMessage For="() => clientes.Cpf" />

    <label>Nome</label>
    <input class="form-control" @bind-value="clientes.Nome" />
    <ValidationMessage For="() => clientes.Nome" />

    <label>CEP</label>
     <input type="number" @bind-value:event="oninput" class="form-control" @bind-value="clientes.Cep" />
    <ValidationMessage For="() => clientes.Cep" />

    <label>Endereço</label>
    <input class="form-control" @bind-value="clientes.Endereco" />
    <ValidationMessage For="() => clientes.Endereco" />
    <label>Numero</label>
    <input class="form-control" @bind-value="clientes.Numero" />
    <ValidationMessage For="() => clientes.Numero" />

    <label>Complemento</label>
        <input class="form-control" @bind-value="clientes.Complemento" />
    <ValidationMessage For="() => clientes.Complemento" />

    <label>E-mail</label>
        <input class="form-control" @bind-value="clientes.Email" />
    <ValidationMessage For="() => clientes.Email" />

    <label>Celular</label>
        <input type="number" @bind-value:event="oninput" class="form-control" @bind-value="clientes.Celular" />
    <ValidationMessage For="() => clientes.Celular" />

    <label>Estado Civil</label>
    <input class="form-control" @bind-value="clientes.EstadoCivil" />
    <ValidationMessage For="() => clientes.EstadoCivil" />

    <button type="submit" class="btn btn-primary mt-5">Cadastrar</button>

</EditForm>
}
else
{
<EditForm Model="clientes" OnValidSubmit="handleSendClient">
    <DataAnnotationsValidator />

    <MudTextField Label="CPF" @bind-Value="clientes.Cpf" />
    <ValidationMessage For="() => clientes.Cpf" />


    <MudTextField Label="Nome" @bind-Value="clientes.Nome" />
    <ValidationMessage For="() => clientes.Nome" />


    <MudTextField Label="Cep" @bind-Value="clientes.Cep" />
    <ValidationMessage For="() => clientes.Cep" />


    <MudTextField Label="Endereco" @bind-Value="clientes.Endereco" />
    <ValidationMessage For="() => clientes.Endereco" />


    <MudTextField Label="Numero" @bind-Value="clientes.Numero" />
    <ValidationMessage For="() => clientes.Numero" />


    <MudTextField Label="Complemento" @bind-Value="clientes.Complemento" />
    <ValidationMessage For="() => clientes.Complemento" />


    <MudTextField Label="Email" @bind-Value="clientes.Email" />
    <ValidationMessage For="() => clientes.Email" />


    <MudTextField Label="Celular" @bind-Value="clientes.Celular" />
    <ValidationMessage For="() => clientes.Celular" />


    <MudTextField Label="EstadoCivil" @bind-Value="clientes.EstadoCivil" />
    <ValidationMessage For="() => clientes.EstadoCivil" />

    <button type="submit" class="btn btn-primary mt-5">Cadastrar</button>
</EditForm>
}


@code {



    async Task ConfigAlerta(string texto, string btntexto1, Color color)
    {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", texto);
        parameters.Add("ButtonText", btntexto1);
        parameters.Add("Color", color);

        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };

        DialogService.Show<DialogAlert>("Alerta!", parameters, options);
    }


    public Clientes clientes { get; set; } = new();


    public bool switchScreen { get; set; } = false;

    private async void handleSendClient()
    {
        var ret = await http.PostAsJsonAsync<Clientes>("https://apiclientesapi.azure-api.net/v1/api/DadosClientes1/", clientes);
        if (ret.IsSuccessStatusCode)
        {
            await ConfigAlerta("Cadastrado com sucesso", "OK", Color.Success);
            clientes = new();
            StateHasChanged();
            
        }
        else
        {
            await ConfigAlerta("Erro ao cadastrar", "OK", Color.Error);
        }
    }

    private void switchScreenType()
    {
        if (switchScreen)
        {
            switchScreen = false;
            StateHasChanged();
        }
        else
        {
            switchScreen = true;
            StateHasChanged();
        }
    }
}
